{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"./Container\";\nimport Styles from \"./Styles\";\nimport { useState, useEffect } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { app, db, getFirestore, collection, addDoc } from \"../firebase/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Habits() {\n  var _useState = useState(['No habits']),\n    _useState2 = _slicedToArray(_useState, 2),\n    habits = _useState2[0],\n    setHabits = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    checkMark = _useState4[0],\n    setCheckMark = _useState4[1];\n  var addCompletedHabit = function addCompletedHabit(habitname) {};\n  useEffect(function () {\n    var getStore = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var habit = yield AsyncStorage.getItem('habits');\n          console.log(habit);\n          if (habit) {\n            setHabits(JSON.parse(habit));\n          }\n          if (habit) {\n            console.log(\"Hmmm....\");\n          }\n        } catch (e) {\n          console.log(e);\n          console.log(\"Hmmm....\");\n        }\n      });\n      return function getStore() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getStore();\n  }, []);\n  return _jsxs(Container, {\n    pageTitle: \"Habits\",\n    children: [_jsxs(View, {\n      style: Styles.habits_day,\n      children: [_jsx(Text, {\n        style: Styles.habits_day_title,\n        children: \"Today\"\n      }), _jsx(Text, {\n        style: Styles.habits_day_title_sub,\n        children: \"Thu Sep 14\"\n      })]\n    }), habits.map(function (habit, index) {\n      return _jsx(View, {\n        style: Styles.habit,\n        children: _jsxs(Pressable, {\n          style: Styles.habit_pressable,\n          onPress: addCompletedHabit(habit.name),\n          children: [_jsx(Checkbox, {\n            style: Styles.checkbox,\n            value: checkMark,\n            onValueChange: setCheckMark\n          }), _jsx(Text, {\n            style: Styles.habit_name,\n            children: habit.name\n          })]\n        })\n      }, index);\n    }), _jsx(Pressable, {\n      style: Styles.add_habit_btn,\n      children: _jsx(Text, {\n        style: Styles.add_habit_txt,\n        children: \"Add Habit\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["Container","Styles","useState","useEffect","Checkbox","app","db","getFirestore","collection","addDoc","jsx","_jsx","jsxs","_jsxs","Habits","_useState","_useState2","_slicedToArray","habits","setHabits","_useState3","_useState4","checkMark","setCheckMark","addCompletedHabit","habitname","getStore","_ref","_asyncToGenerator","habit","AsyncStorage","getItem","console","log","JSON","parse","e","apply","arguments","pageTitle","children","View","style","habits_day","Text","habits_day_title","habits_day_title_sub","map","index","Pressable","habit_pressable","onPress","name","checkbox","value","onValueChange","habit_name","add_habit_btn","add_habit_txt"],"sources":["/Users/sgrieve/Documents/GitHub/Habitful/components/Habits.js"],"sourcesContent":["import { Text, Pressable, View } from 'react-native';\nimport Container from './Container';\nimport Styles from './Styles';\nimport { useState, useEffect } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { app, db, getFirestore, collection, addDoc } from '../firebase/index';\n\nexport default function Habits() {\n  const [habits, setHabits] = useState(['No habits'])\n  const [checkMark, setCheckMark] = useState(false)\n\n  // ADD COMPLETED HABIT TO STORE\n  const addCompletedHabit = (habitname) => {\n\n  }\n\n  // GET STORED HABITS AND ADD TO STATE\n  useEffect(() => {\n    const getStore = async () => {\n      try {\n        let habit =  await AsyncStorage.getItem('habits')\n        console.log(habit)\n        if (habit){\n          setHabits(JSON.parse(habit))\n        }\n        if (habit){console.log(\"Hmmm....\")}\n      } catch(e) {\n        console.log(e)\n        console.log(\"Hmmm....\")\n      }\n    }\n    getStore()\n  }, [])\n  \n  return (\n    <Container pageTitle='Habits'>\n      <View style={Styles.habits_day}>\n        <Text style={Styles.habits_day_title}>Today</Text>\n        <Text style={Styles.habits_day_title_sub}>Thu Sep 14</Text>\n      </View>\n      {habits.map(function(habit, index) {\n        return (\n          <View style={Styles.habit} key={index}>\n            <Pressable style={Styles.habit_pressable} onPress={addCompletedHabit(habit.name)}>\n              <Checkbox style={Styles.checkbox} value={checkMark} onValueChange={setCheckMark} />\n              <Text style={Styles.habit_name}>{habit.name}</Text>\n            </Pressable>\n          </View>\n        )\n      })}\n      <Pressable style={Styles.add_habit_btn}>\n        <Text style={Styles.add_habit_txt}>Add Habit</Text>\n      </Pressable>\n    </Container>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}