{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"./Styles\";\nimport Checkbox from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HabitsItem(_ref) {\n  var addCompletedHabit = _ref.addCompletedHabit,\n    habitName = _ref.habitName;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checkMark = _useState2[0],\n    setCheckMark = _useState2[1];\n  return _jsx(View, {\n    style: Styles.habit,\n    children: _jsxs(Pressable, {\n      style: Styles.habit_pressable,\n      onPress: addCompletedHabit,\n      children: [_jsx(Checkbox, {\n        style: Styles.checkbox,\n        value: checkMark,\n        onValueChange: setCheckMark\n      }), _jsx(Text, {\n        style: Styles.habit_name,\n        children: habitName\n      })]\n    })\n  });\n}","map":{"version":3,"names":["Styles","Checkbox","jsx","_jsx","jsxs","_jsxs","HabitsItem","_ref","addCompletedHabit","habitName","_useState","useState","_useState2","_slicedToArray","checkMark","setCheckMark","View","style","habit","children","Pressable","habit_pressable","onPress","checkbox","value","onValueChange","Text","habit_name"],"sources":["/Users/sgrieve/Documents/GitHub/Habitful/components/HabitsItem.js"],"sourcesContent":["//import { useState, useEffect } from 'react';\nimport { Text, Pressable, View } from 'react-native';\nimport Styles from './Styles';\nimport Checkbox from 'expo-checkbox';\n\nexport default function HabitsItem({addCompletedHabit, habitName}) {\n  //const [habits, setHabits] = useState([])\n  const [checkMark, setCheckMark] = useState(false)\n\n  // useEffect(() => {\n  //   const getStore = async () => {\n  //     try {\n  //       let habit =  await AsyncStorage.getItem('habits')\n  //       setHabits(JSON.parse(habit))\n  //     } catch(e) {\n  //       console.log(e)\n  //     }\n  //   }\n  // }, [])\n  \n  return (\n    <View style={Styles.habit}>\n      <Pressable style={Styles.habit_pressable} onPress={addCompletedHabit}>\n        <Checkbox style={Styles.checkbox} value={checkMark} onValueChange={setCheckMark} />\n        <Text style={Styles.habit_name}>{habitName}</Text>\n      </Pressable>\n    </View>\n  )\n}"],"mappings":";;;;AAEA,OAAOA,MAAM;AACb,OAAOC,QAAQ,MAAM,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAiC;EAAA,IAA/BC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;EAE9D,IAAAC,SAAA,GAAkCC,QAAQ,CAAC,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA1CI,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAa9B,OACET,IAAA,CAACa,IAAI;IAACC,KAAK,EAAEjB,MAAM,CAACkB,KAAM;IAAAC,QAAA,EACxBd,KAAA,CAACe,SAAS;MAACH,KAAK,EAAEjB,MAAM,CAACqB,eAAgB;MAACC,OAAO,EAAEd,iBAAkB;MAAAW,QAAA,GACnEhB,IAAA,CAACF,QAAQ;QAACgB,KAAK,EAAEjB,MAAM,CAACuB,QAAS;QAACC,KAAK,EAAEV,SAAU;QAACW,aAAa,EAAEV;MAAa,CAAE,CAAC,EACnFZ,IAAA,CAACuB,IAAI;QAACT,KAAK,EAAEjB,MAAM,CAAC2B,UAAW;QAAAR,QAAA,EAAEV;MAAS,CAAO,CAAC;IAAA,CACzC;EAAC,CACR,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}