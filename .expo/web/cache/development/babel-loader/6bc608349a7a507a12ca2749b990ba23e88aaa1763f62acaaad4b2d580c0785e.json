{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Container from \"./Container\";\nimport Styles from \"./Styles\";\nimport { useState, useEffect } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { db, collection, getDocs } from \"../firebase/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Habits() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    habits = _useState2[0],\n    setHabits = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    checkMark = _useState4[0],\n    setCheckMark = _useState4[1];\n  var addCompletedHabit = function addCompletedHabit(habitname) {};\n  useEffect(function () {\n    var getHabits = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var querySnapshot = yield getDocs(collection(db, \"habits\"));\n        setHabits(querySnapshot);\n        querySnapshot.forEach(function (doc) {\n          setHabits(_objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          }));\n          console.log(doc.id, doc.data());\n        });\n      });\n      return function getHabits() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getHabits();\n  }, []);\n  return _jsxs(Container, {\n    pageTitle: \"Habits\",\n    children: [_jsxs(View, {\n      style: Styles.habits_day,\n      children: [_jsx(Text, {\n        style: Styles.habits_day_title,\n        children: \"Today\"\n      }), _jsx(Text, {\n        style: Styles.habits_day_title_sub,\n        children: \"Thu Sep 14\"\n      })]\n    }), _jsx(Pressable, {\n      style: Styles.add_habit_btn,\n      children: _jsx(Text, {\n        style: Styles.add_habit_txt,\n        children: \"Add Habit\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["Container","Styles","useState","useEffect","Checkbox","db","collection","getDocs","jsx","_jsx","jsxs","_jsxs","Habits","_useState","_useState2","_slicedToArray","habits","setHabits","_useState3","_useState4","checkMark","setCheckMark","addCompletedHabit","habitname","getHabits","_ref","_asyncToGenerator","querySnapshot","forEach","doc","_objectSpread","data","id","console","log","apply","arguments","pageTitle","children","View","style","habits_day","Text","habits_day_title","habits_day_title_sub","Pressable","add_habit_btn","add_habit_txt"],"sources":["/Users/sgrieve/Documents/GitHub/Habitful/components/Habits.js"],"sourcesContent":["import { Text, Pressable, View } from 'react-native';\nimport Container from './Container';\nimport Styles from './Styles';\nimport { useState, useEffect } from 'react';\nimport Checkbox from 'expo-checkbox';\nimport { db, collection, getDocs } from '../firebase/index';\n\nexport default function Habits() {\n  const [habits, setHabits] = useState([])\n  const [checkMark, setCheckMark] = useState(false)\n\n  // ADD COMPLETED HABIT TO STORE\n  const addCompletedHabit = (habitname) => {\n\n  }\n\n  // const getHabits = async () => {\n  //   const querySnapshot = await getDocs(collection(db, \"habits\"))\n  //   debugger\n  //   setHabits(querySnapshot)\n  //   debugger\n  //   // querySnapshot.forEach((doc) => {\n  //   //   debugger\n  //   //   //setHabits(doc.data())\n  //   //   console.log(doc.id, doc.data());\n  //   // });\n  // }\n\n  useEffect (() => {\n    const getHabits = async () => {\n      const querySnapshot = await getDocs(collection(db, \"habits\"))\n      setHabits(querySnapshot)\n      querySnapshot.forEach((doc) => {\n        setHabits({\n          ...doc.data(),\n          id: doc.id,\n        })\n        console.log(doc.id, doc.data());\n      });\n    }\n    getHabits()\n  }, [])\n  \n  return (\n    <Container pageTitle='Habits'>\n      <View style={Styles.habits_day}>\n        <Text style={Styles.habits_day_title}>Today</Text>\n        <Text style={Styles.habits_day_title_sub}>Thu Sep 14</Text>\n      </View>\n      {/* {habits.map(function(habit, index) {\n        return (\n          <View style={Styles.habit} key={index}>\n            <Pressable style={Styles.habit_pressable} onPress={addCompletedHabit(habit.name)}>\n              <Checkbox style={Styles.checkbox} value={checkMark} onValueChange={setCheckMark} />\n              <Text style={Styles.habit_name}>{habit.name}</Text>\n            </Pressable>\n          </View>\n        )\n      })}  */}\n      <Pressable style={Styles.add_habit_btn}>\n        <Text style={Styles.add_habit_txt}>Add Habit</Text>\n      </Pressable>\n    </Container>\n  )\n}"],"mappings":";;;;;;;;AACA,OAAOA,SAAS;AAChB,OAAOC,MAAM;AACb,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,EAAE,EAAEC,UAAU,EAAEC,OAAO;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,IAAAC,SAAA,GAA4BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAkChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAG9B,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,SAAS,EAAK,CAEzC,CAAC;EAcDpB,SAAS,CAAE,YAAM;IACf,IAAMqB,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAMC,aAAa,SAASpB,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC7DY,SAAS,CAACU,aAAa,CAAC;QACxBA,aAAa,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;UAC7BZ,SAAS,CAAAa,aAAA,CAAAA,aAAA,KACJD,GAAG,CAACE,IAAI,CAAC,CAAC;YACbC,EAAE,EAAEH,GAAG,CAACG;UAAE,EACX,CAAC;UACFC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,EAAE,EAAEH,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC;MACJ,CAAC;MAAA,gBAVKP,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;MAAA;IAAA,GAUd;IACDZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACEb,KAAA,CAACX,SAAS;IAACqC,SAAS,EAAC,QAAQ;IAAAC,QAAA,GAC3B3B,KAAA,CAAC4B,IAAI;MAACC,KAAK,EAAEvC,MAAM,CAACwC,UAAW;MAAAH,QAAA,GAC7B7B,IAAA,CAACiC,IAAI;QAACF,KAAK,EAAEvC,MAAM,CAAC0C,gBAAiB;QAAAL,QAAA,EAAC;MAAK,CAAM,CAAC,EAClD7B,IAAA,CAACiC,IAAI;QAACF,KAAK,EAAEvC,MAAM,CAAC2C,oBAAqB;QAAAN,QAAA,EAAC;MAAU,CAAM,CAAC;IAAA,CACvD,CAAC,EAWP7B,IAAA,CAACoC,SAAS;MAACL,KAAK,EAAEvC,MAAM,CAAC6C,aAAc;MAAAR,QAAA,EACrC7B,IAAA,CAACiC,IAAI;QAACF,KAAK,EAAEvC,MAAM,CAAC8C,aAAc;QAAAT,QAAA,EAAC;MAAS,CAAM;IAAC,CAC1C,CAAC;EAAA,CACH,CAAC;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}