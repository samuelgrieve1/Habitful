{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"ErrorBoundary\"],\n  _excluded2 = [\"route\", \"navigation\"],\n  _excluded3 = [\"options\"];\nvar _jsxFileName = \"/Users/samuelgrieve/Desktop/Habitful/node_modules/expo-router/src/useScreens.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createElement as _createElement } from \"react\";\nimport { Route, sortRoutesWithInitial, useRouteNode } from \"./Route\";\nimport EXPO_ROUTER_IMPORT_MODE from \"./import-mode\";\nimport { Screen } from \"./primitives\";\nimport { EmptyRoute } from \"./views/EmptyRoute\";\nimport { SuspenseFallback } from \"./views/SuspenseFallback\";\nimport { Try } from \"./views/Try\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getSortedChildren(children, order, initialRouteName) {\n  if (!(order != null && order.length)) {\n    return children.sort(sortRoutesWithInitial(initialRouteName)).map(function (route) {\n      return {\n        route: route,\n        props: {}\n      };\n    });\n  }\n  var entries = _toConsumableArray(children);\n  var ordered = order.map(function (_ref) {\n    var name = _ref.name,\n      redirect = _ref.redirect,\n      initialParams = _ref.initialParams,\n      listeners = _ref.listeners,\n      options = _ref.options,\n      getId = _ref.getId;\n    if (!entries.length) {\n      console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n      return null;\n    }\n    var matchIndex = entries.findIndex(function (child) {\n      return child.route === name;\n    });\n    if (matchIndex === -1) {\n      console.warn(`[Layout children]: No route named \"${name}\" exists in nested children:`, children.map(function (_ref2) {\n        var route = _ref2.route;\n        return route;\n      }));\n      return null;\n    } else {\n      var match = entries[matchIndex];\n      entries.splice(matchIndex, 1);\n      if (redirect) {\n        if (typeof redirect === \"string\") {\n          throw new Error(`Redirecting to a specific route is not supported yet.`);\n        }\n        return null;\n      }\n      return {\n        route: match,\n        props: {\n          initialParams: initialParams,\n          listeners: listeners,\n          options: options,\n          getId: getId\n        }\n      };\n    }\n  }).filter(Boolean);\n  ordered.push.apply(ordered, _toConsumableArray(entries.sort(sortRoutesWithInitial(initialRouteName)).map(function (route) {\n    return {\n      route: route,\n      props: {}\n    };\n  })));\n  return ordered;\n}\nexport function useSortedScreens(order) {\n  var _node$children;\n  var node = useRouteNode();\n  var sorted = node != null && (_node$children = node.children) != null && _node$children.length ? getSortedChildren(node.children, order, node.initialRouteName) : [];\n  return React.useMemo(function () {\n    return sorted.map(function (value) {\n      return routeToScreen(value.route, value.props);\n    });\n  }, [sorted]);\n}\nfunction fromImport(_ref3) {\n  var _this = this;\n  var ErrorBoundary = _ref3.ErrorBoundary,\n    component = _objectWithoutProperties(_ref3, _excluded);\n  if (ErrorBoundary) {\n    return {\n      default: React.forwardRef(function (props, ref) {\n        var children = React.createElement(component.default || EmptyRoute, _objectSpread(_objectSpread({}, props), {}, {\n          ref: ref\n        }));\n        return _jsxDEV(Try, {\n          catch: ErrorBoundary,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, _this);\n      })\n    };\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof component.default === \"object\" && component.default && Object.keys(component.default).length === 0) {\n      return {\n        default: EmptyRoute\n      };\n    }\n  }\n  return {\n    default: component.default || EmptyRoute\n  };\n}\nfunction fromLoadedRoute(res) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n  return res.then(fromImport);\n}\nvar qualifiedStore = new WeakMap();\nexport function getQualifiedRouteComponent(value) {\n  var _this2 = this;\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value);\n  }\n  var getLoadable;\n  if (EXPO_ROUTER_IMPORT_MODE === \"lazy\") {\n    var AsyncComponent = React.lazy(_asyncToGenerator(function* () {\n      var res = value.loadRoute();\n      return fromLoadedRoute(res);\n    }));\n    getLoadable = function getLoadable(props, ref) {\n      return _jsxDEV(React.Suspense, {\n        fallback: _jsxDEV(SuspenseFallback, {\n          route: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }, _this2),\n        children: _jsxDEV(AsyncComponent, _objectSpread({}, _objectSpread(_objectSpread({}, props), {}, {\n          ref: ref,\n          segment: value.route\n        })), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, _this2);\n    };\n  } else {\n    var SyncComponent = React.forwardRef(function (props, ref) {\n      var res = value.loadRoute();\n      var Component = fromImport(res).default;\n      return _jsxDEV(Component, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }, _this2);\n    });\n    getLoadable = function getLoadable(props, ref) {\n      return _jsxDEV(SyncComponent, _objectSpread({}, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref,\n        segment: value.route\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, _this2);\n    };\n  }\n  var QualifiedRoute = React.forwardRef(function (_ref5, ref) {\n    var route = _ref5.route,\n      navigation = _ref5.navigation,\n      props = _objectWithoutProperties(_ref5, _excluded2);\n    var loadable = getLoadable(props, ref);\n    return _jsxDEV(Route, {\n      node: value,\n      children: loadable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 14\n    }, _this2);\n  });\n  QualifiedRoute.displayName = `Route(${value.route})`;\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\nexport function createGetIdForRoute(route) {\n  var _route$dynamic;\n  if (!((_route$dynamic = route.dynamic) != null && _route$dynamic.length)) {\n    return undefined;\n  }\n  return function (_ref6) {\n    var _route$dynamic2;\n    var params = _ref6.params;\n    var getPreferredId = function getPreferredId(segment) {\n      var preferredId = params == null ? void 0 : params[segment.name];\n      if (preferredId) {\n        if (!Array.isArray(preferredId)) {\n          return preferredId;\n        } else if (preferredId.length) {\n          return preferredId.join(\"/\");\n        }\n      }\n      return segment.deep ? `[...${segment.name}]` : `[${segment.name}]`;\n    };\n    return (_route$dynamic2 = route.dynamic) == null ? void 0 : _route$dynamic2.map(function (segment) {\n      return getPreferredId(segment);\n    }).join(\"/\");\n  };\n}\nfunction routeToScreen(route) {\n  var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options = _ref7.options,\n    props = _objectWithoutProperties(_ref7, _excluded3);\n  return _createElement(Screen, _objectSpread(_objectSpread({\n    getId: createGetIdForRoute(route)\n  }, props), {}, {\n    name: route.route,\n    key: route.route,\n    options: function options(args) {\n      var _route$loadRoute;\n      var staticOptions = route.generated ? (_route$loadRoute = route.loadRoute()) == null ? void 0 : _route$loadRoute.getNavOptions : null;\n      var staticResult = typeof staticOptions === \"function\" ? staticOptions(args) : staticOptions;\n      var dynamicResult = typeof _options === \"function\" ? _options == null ? void 0 : _options(args) : _options;\n      var output = _objectSpread(_objectSpread({}, staticResult), dynamicResult);\n      if (route.generated) {\n        output.tabBarButton = function () {\n          return null;\n        };\n        output.drawerItemStyle = {\n          height: 0,\n          display: \"none\"\n        };\n      }\n      return output;\n    },\n    getComponent: function getComponent() {\n      return getQualifiedRouteComponent(route);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"names":["React","createElement","_createElement","Route","sortRoutesWithInitial","useRouteNode","EXPO_ROUTER_IMPORT_MODE","Screen","EmptyRoute","SuspenseFallback","Try","jsxDEV","_jsxDEV","getSortedChildren","children","order","initialRouteName","length","sort","map","route","props","entries","_toConsumableArray","ordered","_ref","name","redirect","initialParams","listeners","options","getId","console","warn","matchIndex","findIndex","child","_ref2","match","splice","Error","filter","Boolean","push","apply","useSortedScreens","_node$children","node","sorted","useMemo","value","routeToScreen","fromImport","_ref3","_this","ErrorBoundary","component","_objectWithoutProperties","_excluded","default","forwardRef","ref","_objectSpread","catch","fileName","_jsxFileName","lineNumber","columnNumber","process","env","NODE_ENV","Object","keys","fromLoadedRoute","res","Promise","then","qualifiedStore","WeakMap","getQualifiedRouteComponent","_this2","has","get","getLoadable","AsyncComponent","lazy","_asyncToGenerator","loadRoute","Suspense","fallback","segment","SyncComponent","Component","QualifiedRoute","_ref5","navigation","_excluded2","loadable","displayName","set","createGetIdForRoute","_route$dynamic","dynamic","undefined","_ref6","_route$dynamic2","params","getPreferredId","preferredId","Array","isArray","join","deep","_ref7","arguments","_excluded3","key","args","_route$loadRoute","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","tabBarButton","drawerItemStyle","height","display","getComponent","__self","__source"],"sources":["/Users/samuelgrieve/Desktop/Habitful/node_modules/expo-router/src/useScreens.tsx"],"sourcesContent":["import type {\n  EventMapBase,\n  NavigationState,\n  ParamListBase,\n  RouteProp,\n  ScreenListeners,\n} from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport {\n  DynamicConvention,\n  LoadedRoute,\n  Route,\n  RouteNode,\n  sortRoutesWithInitial,\n  useRouteNode,\n} from \"./Route\";\nimport EXPO_ROUTER_IMPORT_MODE from \"./import-mode\";\nimport { Screen } from \"./primitives\";\nimport { EmptyRoute } from \"./views/EmptyRoute\";\nimport { SuspenseFallback } from \"./views/SuspenseFallback\";\nimport { Try } from \"./views/Try\";\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  State extends NavigationState = NavigationState,\n  EventMap extends EventMapBase = EventMapBase\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are redirect={true}, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: { [key: string]: any };\n  options?: TOptions;\n\n  listeners?:\n    | ScreenListeners<State, EventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n\n  getId?: ({\n    params,\n  }: {\n    params?: Record<string, any> | undefined;\n  }) => string | undefined;\n};\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order?: ScreenProps[],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(({ name, redirect, initialParams, listeners, options, getId }) => {\n      if (!entries.length) {\n        console.warn(\n          `[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`\n        );\n        return null;\n      }\n      const matchIndex = entries.findIndex((child) => child.route === name);\n      if (matchIndex === -1) {\n        console.warn(\n          `[Layout children]: No route named \"${name}\" exists in nested children:`,\n          children.map(({ route }) => route)\n        );\n        return null;\n      } else {\n        // Get match and remove from entries\n        const match = entries[matchIndex];\n        entries.splice(matchIndex, 1);\n\n        // Ensure to return null after removing from entries.\n        if (redirect) {\n          if (typeof redirect === \"string\") {\n            throw new Error(\n              `Redirecting to a specific route is not supported yet.`\n            );\n          }\n          return null;\n        }\n\n        return {\n          route: match,\n          props: { initialParams, listeners, options, getId },\n        };\n      }\n    })\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(order: ScreenProps[]): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const sorted = node?.children?.length\n    ? getSortedChildren(node.children, order, node.initialRouteName)\n    : [];\n  return React.useMemo(\n    () => sorted.map((value) => routeToScreen(value.route, value.props)),\n    [sorted]\n  );\n}\n\nfunction fromImport({ ErrorBoundary, ...component }: LoadedRoute) {\n  if (ErrorBoundary) {\n    return {\n      default: React.forwardRef((props: any, ref: any) => {\n        const children = React.createElement(component.default || EmptyRoute, {\n          ...props,\n          ref,\n        });\n        return <Try catch={ErrorBoundary}>{children}</Try>;\n      }),\n    };\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\n      typeof component.default === \"object\" &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n  return { default: component.default || EmptyRoute };\n}\n\nfunction fromLoadedRoute(res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n\n  return res.then(fromImport);\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let getLoadable: (props: any, ref: any) => JSX.Element;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === \"lazy\") {\n    const AsyncComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n    getLoadable = (props: any, ref: any) => (\n      <React.Suspense fallback={<SuspenseFallback route={value} />}>\n        <AsyncComponent\n          {...{\n            ...props,\n            ref,\n            // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n            // the intention is to make it possible to deduce shared routes.\n            segment: value.route,\n          }}\n        />\n      </React.Suspense>\n    );\n  } else {\n    const SyncComponent = React.forwardRef((props, ref) => {\n      const res = value.loadRoute();\n      const Component = fromImport(res).default;\n      return <Component {...props} ref={ref} />;\n    });\n\n    getLoadable = (props: any, ref: any) => (\n      <SyncComponent\n        {...{\n          ...props,\n          ref,\n          // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n          // the intention is to make it possible to deduce shared routes.\n          segment: value.route,\n        }}\n      />\n    );\n  }\n\n  const QualifiedRoute = React.forwardRef(\n    (\n      {\n        // Remove these React Navigation props to\n        // enforce usage of expo-router hooks (where the query params are correct).\n        route,\n        navigation,\n\n        // Pass all other props to the component\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const loadable = getLoadable(props, ref);\n\n      return <Route node={value}>{loadable}</Route>;\n    }\n  );\n\n  QualifiedRoute.displayName = `Route(${value.route})`;\n\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\n\n/** @returns a function which provides a screen id that matches the dynamic route name in params. */\nexport function createGetIdForRoute(\n  route: Pick<RouteNode, \"dynamic\" | \"route\">\n) {\n  if (!route.dynamic?.length) {\n    return undefined;\n  }\n  return ({ params }: { params?: Record<string, any> }) => {\n    const getPreferredId = (segment: DynamicConvention) => {\n      // Params can be undefined when there are no params in the route.\n      const preferredId = params?.[segment.name];\n      // If the route has a dynamic segment, use the matching parameter\n      // as the screen id. This enables pushing a screen like `/[user]` multiple times\n      // when the user is different.\n      if (preferredId) {\n        if (!Array.isArray(preferredId)) {\n          return preferredId;\n        } else if (preferredId.length) {\n          // Deep dynamic routes will return as an array, so we'll join them to create a\n          // fully qualified string.\n          return preferredId.join(\"/\");\n        }\n        // Empty arrays...\n      }\n      return segment.deep ? `[...${segment.name}]` : `[${segment.name}]`;\n    };\n    return route.dynamic?.map((segment) => getPreferredId(segment)).join(\"/\");\n  };\n}\n\nfunction routeToScreen(\n  route: RouteNode,\n  { options, ...props }: Partial<ScreenProps> = {}\n) {\n  return (\n    <Screen\n      // Users can override the screen getId function.\n      getId={createGetIdForRoute(route)}\n      {...props}\n      name={route.route}\n      key={route.route}\n      options={(args) => {\n        // Only eager load generated components\n        const staticOptions = route.generated\n          ? route.loadRoute()?.getNavOptions\n          : null;\n        const staticResult =\n          typeof staticOptions === \"function\"\n            ? staticOptions(args)\n            : staticOptions;\n        const dynamicResult =\n          typeof options === \"function\" ? options?.(args) : options;\n        const output = {\n          ...staticResult,\n          ...dynamicResult,\n        };\n\n        // Prevent generated screens from showing up in the tab bar.\n        if (route.generated) {\n          output.tabBarButton = () => null;\n          // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n          output.drawerItemStyle = { height: 0, display: \"none\" };\n        }\n\n        return output;\n      }}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}