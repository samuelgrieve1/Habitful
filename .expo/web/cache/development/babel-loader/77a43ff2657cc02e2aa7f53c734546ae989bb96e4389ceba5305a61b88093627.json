{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sgrieve/Documents/GitHub/Habitful/components/HabitsItem.js\";\nimport { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from './Styles';\nimport Checkbox from 'expo-checkbox';\nimport { db, doc, updateDoc, arrayUnion, arrayRemove } from '../firebase/index';\nimport { deleteField } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HabitsItem(_ref) {\n  var habitId = _ref.habitId,\n    habitName = _ref.habitName,\n    currentDate = _ref.currentDate;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checkMark = _useState2[0],\n    setCheckMark = _useState2[1];\n  var addCompletedHabit = function () {\n    var _ref2 = _asyncToGenerator(function* (habitId) {\n      if (!checkMark) {\n        yield updateDoc(doc(db, \"habits\", habitId), {\n          completed: arrayUnion(currentDate)\n        });\n      } else {\n        yield updateDoc(doc(db, \"habits\", habitId), {\n          completed: arrayRemove(currentDate)\n        });\n      }\n    });\n    return function addCompletedHabit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(View, {\n    style: Styles.habit,\n    children: _jsxDEV(Pressable, {\n      style: Styles.habit_pressable,\n      onPress: function onPress() {\n        return addCompletedHabit(habitId);\n      },\n      children: [_jsxDEV(Checkbox, {\n        style: Styles.checkbox,\n        value: checkMark,\n        onValueChange: setCheckMark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: Styles.habit_name,\n        children: habitName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useEffect","useState","Text","Pressable","View","Styles","Checkbox","db","doc","updateDoc","arrayUnion","arrayRemove","deleteField","jsxDEV","_jsxDEV","HabitsItem","_ref","habitId","habitName","currentDate","_useState","_useState2","_slicedToArray","checkMark","setCheckMark","addCompletedHabit","_ref2","_asyncToGenerator","completed","_x","apply","arguments","style","habit","children","habit_pressable","onPress","checkbox","value","onValueChange","fileName","_jsxFileName","lineNumber","columnNumber","habit_name"],"sources":["/Users/sgrieve/Documents/GitHub/Habitful/components/HabitsItem.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Text, Pressable, View } from 'react-native';\nimport Styles from './Styles';\nimport Checkbox from 'expo-checkbox';\nimport { db, doc, updateDoc, arrayUnion, arrayRemove } from '../firebase/index';\nimport { deleteField } from 'firebase/firestore';\n\nexport default function HabitsItem({habitId, habitName, currentDate}) {\n  //const [habits, setHabits] = useState([])\n  const [checkMark, setCheckMark] = useState(false)\n\n  // ADD COMPLETED HABIT TO STATE\n  const addCompletedHabit = async(habitId) => {\n    if(!checkMark){\n      await updateDoc(doc(db, \"habits\", (habitId)), {\n        completed: arrayUnion(currentDate)           \n      })\n    } else {\n      await updateDoc(doc(db, \"habits\", (habitId)), {\n        completed: arrayRemove(currentDate)         \n      })\n    }\n  }\n\n  // useEffect(() => {\n  //   const date = new Date()\n  // },[])\n  \n  return (\n    <View style={Styles.habit}>\n      <Pressable style={Styles.habit_pressable} onPress={() => addCompletedHabit(habitId)}>\n        <Checkbox style={Styles.checkbox} value={checkMark} onValueChange={setCheckMark} />\n        <Text style={Styles.habit_name}>{habitName}</Text>\n      </Pressable>\n    </View>\n  )\n}"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,EAAE,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAAQ,mBAAmB;AAC/E,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAoC;EAAA,IAAlCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,WAAW,GAAAH,IAAA,CAAXG,WAAW;EAEjE,IAAAC,SAAA,GAAkCnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9B,IAAMI,iBAAiB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAMV,OAAO,EAAK;MAC1C,IAAG,CAACM,SAAS,EAAC;QACZ,MAAMd,SAAS,CAACD,GAAG,CAACD,EAAE,EAAE,QAAQ,EAAGU,OAAQ,CAAC,EAAE;UAC5CW,SAAS,EAAElB,UAAU,CAACS,WAAW;QACnC,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMV,SAAS,CAACD,GAAG,CAACD,EAAE,EAAE,QAAQ,EAAGU,OAAQ,CAAC,EAAE;UAC5CW,SAAS,EAAEjB,WAAW,CAACQ,WAAW;QACpC,CAAC,CAAC;MACJ;IACF,CAAC;IAAA,gBAVKM,iBAAiBA,CAAAI,EAAA;MAAA,OAAAH,KAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUtB;EAMD,OACEjB,OAAA,CAACV,IAAI;IAAC4B,KAAK,EAAE3B,MAAM,CAAC4B,KAAM;IAAAC,QAAA,EACxBpB,OAAA,CAACX,SAAS;MAAC6B,KAAK,EAAE3B,MAAM,CAAC8B,eAAgB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,iBAAiB,CAACR,OAAO,CAAC;MAAA,CAAC;MAAAiB,QAAA,GAClFpB,OAAA,CAACR,QAAQ;QAAC0B,KAAK,EAAE3B,MAAM,CAACgC,QAAS;QAACC,KAAK,EAAEf,SAAU;QAACgB,aAAa,EAAEf;MAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnF7B,OAAA,CAACZ,IAAI;QAAC8B,KAAK,EAAE3B,MAAM,CAACuC,UAAW;QAAAV,QAAA,EAAEhB;MAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}